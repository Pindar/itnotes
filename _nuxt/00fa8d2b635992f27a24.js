(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{214:function(e,t){e.exports={body:"<h2>What's the problem about rare deployments?</h2><br />\nIf your release cycle is very long your customer will start to ask for things which will make the system very complex. Why? Because your customer want their ideas always as fast as possible implemented. So your customer will start thinking about a system that is completly configurable while running. This new requirements will cause in a complex and less maintainable system.</p>\n<h2>But... I can't release so often.</h2><br />\nNo, you can! It's always possible to release in short cycles. Everything you need is the right set up:</p>\n<ul>\n<li>Continuous integration is the important thing. Without a CI-Server you won't be able to release in short cycles.</li>\n<li>Test automation. You need unit tests, integration tests and for some cases UI tests.</li>\n<li>Monitoring. Your development team should always have an eye on the log files. If you don't know your problems in time you will have big trouble later...</li>\n<li>Automated deployment. If your deployment isn't automated yet and you want to deploy in short cycles you will have no time left to develop software.</li>\n<li>Code management with GIT. This tool supports your rapid deployments in such an dramatic way; it will blow you away.</li>\n<li>A very closely collaboration with your customer to manage the requirements. Don't write abstract requirements -- use examples as much as possible.</li><br />\n</ul><br />\nThis is IMHO the minimum set up that you need if you want to have a continuous deployment.</p>\n<h2>What do you get?</h2><br />\nYour customer get what he want much faster. Your developer don't have to create unmaintainable software but they can create awesome features. Developer and customer will love this new way to work. Rapid deployments ends up in a happy collaboration between customer and developer. Not more but also not less.</p>\n",html:"<h2>What's the problem about rare deployments?</h2><br />\nIf your release cycle is very long your customer will start to ask for things which will make the system very complex. Why? Because your customer want their ideas always as fast as possible implemented. So your customer will start thinking about a system that is completly configurable while running. This new requirements will cause in a complex and less maintainable system.</p>\n<h2>But... I can't release so often.</h2><br />\nNo, you can! It's always possible to release in short cycles. Everything you need is the right set up:</p>\n<ul>\n<li>Continuous integration is the important thing. Without a CI-Server you won't be able to release in short cycles.</li>\n<li>Test automation. You need unit tests, integration tests and for some cases UI tests.</li>\n<li>Monitoring. Your development team should always have an eye on the log files. If you don't know your problems in time you will have big trouble later...</li>\n<li>Automated deployment. If your deployment isn't automated yet and you want to deploy in short cycles you will have no time left to develop software.</li>\n<li>Code management with GIT. This tool supports your rapid deployments in such an dramatic way; it will blow you away.</li>\n<li>A very closely collaboration with your customer to manage the requirements. Don't write abstract requirements -- use examples as much as possible.</li><br />\n</ul><br />\nThis is IMHO the minimum set up that you need if you want to have a continuous deployment.</p>\n<h2>What do you get?</h2><br />\nYour customer get what he want much faster. Your developer don't have to create unmaintainable software but they can create awesome features. Developer and customer will love this new way to work. Rapid deployments ends up in a happy collaboration between customer and developer. Not more but also not less.</p>\n",attributes:{layout:"post",status:"publish",published:!0,title:"Why rapid deployments are so important",author:"Simon Dittlmann",author_login:"Simon",author_email:"simon.dittlmann@itnotes.de",author_url:"http://www.itnotes.de",wordpress_id:134,wordpress_url:"http://www.pindarsign.de/itnotes/?p=134",date:"2012-05-17 23:39:58 +0200",date_gmt:"2012-05-17 21:39:58 +0200",categories:["articles"],tags:["deployments","software","agile"],comments:[],_meta:{resourcePath:"/home/travis/build/Pindar/itnotes/contents/posts/2012-05-17-why-rapid-deployments-are-so-important.md"}},vue:{render:"return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0) }",staticRenderFns:"return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dynamicMarkdown\"},[_c('h2',[_vm._v(\"What's the problem about rare deployments?\")]),_c('br'),_vm._v(\"\\nIf your release cycle is very long your customer will start to ask for things which will make the system very complex. Why? Because your customer want their ideas always as fast as possible implemented. So your customer will start thinking about a system that is completly configurable while running. This new requirements will cause in a complex and less maintainable system.\"),_c('p'),_vm._v(\" \"),_c('h2',[_vm._v(\"But... I can't release so often.\")]),_c('br'),_vm._v(\"\\nNo, you can! It's always possible to release in short cycles. Everything you need is the right set up:\"),_c('p'),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"Continuous integration is the important thing. Without a CI-Server you won't be able to release in short cycles.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Test automation. You need unit tests, integration tests and for some cases UI tests.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Monitoring. Your development team should always have an eye on the log files. If you don't know your problems in time you will have big trouble later...\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Automated deployment. If your deployment isn't automated yet and you want to deploy in short cycles you will have no time left to develop software.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Code management with GIT. This tool supports your rapid deployments in such an dramatic way; it will blow you away.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"A very closely collaboration with your customer to manage the requirements. Don't write abstract requirements -- use examples as much as possible.\")]),_c('br')]),_c('br'),_vm._v(\"\\nThis is IMHO the minimum set up that you need if you want to have a continuous deployment.\"),_c('p'),_vm._v(\" \"),_c('h2',[_vm._v(\"What do you get?\")]),_c('br'),_vm._v(\"\\nYour customer get what he want much faster. Your developer don't have to create unmaintainable software but they can create awesome features. Developer and customer will love this new way to work. Rapid deployments ends up in a happy collaboration between customer and developer. Not more but also not less.\"),_c('p')]) }]",component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this.$createElement;this._self._c;return this._m(0)},this.$options.staticRenderFns=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"dynamicMarkdown"},[o("h2",[e._v("What's the problem about rare deployments?")]),o("br"),e._v("\nIf your release cycle is very long your customer will start to ask for things which will make the system very complex. Why? Because your customer want their ideas always as fast as possible implemented. So your customer will start thinking about a system that is completly configurable while running. This new requirements will cause in a complex and less maintainable system."),o("p"),e._v(" "),o("h2",[e._v("But... I can't release so often.")]),o("br"),e._v("\nNo, you can! It's always possible to release in short cycles. Everything you need is the right set up:"),o("p"),e._v(" "),o("ul",[o("li",[e._v("Continuous integration is the important thing. Without a CI-Server you won't be able to release in short cycles.")]),e._v(" "),o("li",[e._v("Test automation. You need unit tests, integration tests and for some cases UI tests.")]),e._v(" "),o("li",[e._v("Monitoring. Your development team should always have an eye on the log files. If you don't know your problems in time you will have big trouble later...")]),e._v(" "),o("li",[e._v("Automated deployment. If your deployment isn't automated yet and you want to deploy in short cycles you will have no time left to develop software.")]),e._v(" "),o("li",[e._v("Code management with GIT. This tool supports your rapid deployments in such an dramatic way; it will blow you away.")]),e._v(" "),o("li",[e._v("A very closely collaboration with your customer to manage the requirements. Don't write abstract requirements -- use examples as much as possible.")]),o("br")]),o("br"),e._v("\nThis is IMHO the minimum set up that you need if you want to have a continuous deployment."),o("p"),e._v(" "),o("h2",[e._v("What do you get?")]),o("br"),e._v("\nYour customer get what he want much faster. Your developer don't have to create unmaintainable software but they can create awesome features. Developer and customer will love this new way to work. Rapid deployments ends up in a happy collaboration between customer and developer. Not more but also not less."),o("p")])}]}}}}}}]);